// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20220815220619_ChaveCompostaProductEntry")]
    partial class ChaveCompostaProductEntry
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Core.Domain.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("ClosingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Origin")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(65,30)")
                        .HasDefaultValue(0m);

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("entries");
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit(1)");

                    b.Property<decimal?>("AvgPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("BrandName")
                        .HasColumnType("longtext");

                    b.Property<string>("BrandPicture")
                        .HasColumnType("longtext");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("GpcCode")
                        .HasColumnType("longtext");

                    b.Property<string>("GpcDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("Gtin")
                        .HasColumnType("longtext");

                    b.Property<decimal>("InStock")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NcmCode")
                        .HasColumnType("longtext");

                    b.Property<string>("NcmDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("NcmFullDescription")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Core.Domain.ProductEntry", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Id2")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit(1)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TotalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(65,30)")
                        .HasComputedColumnSql("Amount * UnitPrice", true);

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id", "Id2");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("Id2");

                    b.ToTable("products_entry");
                });

            modelBuilder.Entity("Core.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit(1)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("LastChange")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Password")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("longtext");

                    b.Property<string>("ProfileType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Core.Domain.Entry", b =>
                {
                    b.HasOne("Core.Domain.User", "CreatedByUser")
                        .WithMany("Entries")
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.HasOne("Core.Domain.User", "CreatedByUser")
                        .WithMany("Products")
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Core.Domain.ProductEntry", b =>
                {
                    b.HasOne("Core.Domain.User", "CreatedByUser")
                        .WithMany("ProductsEntry")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("Core.Domain.Entry", "Entry")
                        .WithMany("ProductsEntry")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", "Product")
                        .WithMany("ProductsEntry")
                        .HasForeignKey("Id2")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Entry");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.User", b =>
                {
                    b.HasOne("Core.Domain.User", "CreatedByUser")
                        .WithMany("CreatedUsers")
                        .HasForeignKey("CreatedBy");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("Core.Domain.Entry", b =>
                {
                    b.Navigation("ProductsEntry");
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Navigation("ProductsEntry");
                });

            modelBuilder.Entity("Core.Domain.User", b =>
                {
                    b.Navigation("CreatedUsers");

                    b.Navigation("Entries");

                    b.Navigation("Products");

                    b.Navigation("ProductsEntry");
                });
#pragma warning restore 612, 618
        }
    }
}
